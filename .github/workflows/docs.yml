name: 📚 Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'guides/**'
      - 'README.md'
      - 'typedoc.json'
      - 'tsconfig.docs.json'
      - 'docs-theme.css'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'guides/**'
      - 'README.md'
      - 'typedoc.json'
      - 'tsconfig.docs.json'
      - 'docs-theme.css'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even on PR'
        required: false
        default: false
        type: boolean

# Security: Restrict permissions to minimum required
permissions:
  contents: read
  pages: write
  id-token: write

# Prevent concurrent deployments
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build documentation
  build:
    name: 📖 Build Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for git-based features

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: 🔧 Install Dependencies
        run: |
          npm ci --prefer-offline --no-audit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🏗️ Build Package
        run: |
          npm run build
        timeout-minutes: 5

      - name: 📚 Generate Documentation
        run: |
          echo "🏗️ Generating TypeDoc documentation..."
          npm run docs:generate
          
          echo "✅ Documentation generated successfully"
          echo "📁 Documentation structure:"
          find docs -type f -name "*.html" | head -10

      - name: 🔍 Validate Documentation
        run: |
          # Check that essential files exist
          test -f docs/index.html || { echo "❌ Missing docs/index.html"; exit 1; }
          test -f docs/.nojekyll || { echo "❌ Missing docs/.nojekyll"; exit 1; }
          
          # Check guide links in documentation
          if grep -q "Developer Guides" docs/index.html; then
            echo "✅ Guide links found in documentation"
          else
            echo "⚠️ Guide links not found in documentation"
          fi
          
          # Validate HTML structure
          if command -v tidy >/dev/null 2>&1; then
            tidy -q -e docs/index.html || echo "⚠️ HTML validation warnings (non-critical)"
          fi

      - name: 📊 Documentation Statistics
        run: |
          echo "📊 Documentation Statistics:"
          echo "Total HTML files: $(find docs -name "*.html" | wc -l)"
          echo "Total assets: $(find docs/assets -type f | wc -l)"
          echo "Documentation size: $(du -sh docs | cut -f1)"
          
          echo "📋 Guide files:"
          ls -la guides/

      - name: 🔧 Setup Pages Configuration
        run: |
          # Ensure .nojekyll exists to disable Jekyll processing
          touch docs/.nojekyll
          
          # Create custom 404 page if it doesn't exist
          if [ ! -f docs/404.html ]; then
            cat > docs/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Page Not Found - @starknet-io/types-js</title>
            <meta http-equiv="refresh" content="5;url=./">
            <style>
              body { 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
                text-align: center; 
                padding: 60px;
                background: #f8f9fa;
              }
              .container { 
                max-width: 600px; 
                margin: 0 auto;
                background: white;
                padding: 40px;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
              }
              h1 { color: #e74c3c; margin-bottom: 20px; }
              p { color: #666; line-height: 1.6; }
              a { color: #3498db; text-decoration: none; }
              a:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>📚 Page Not Found</h1>
              <p>The requested documentation page could not be found.</p>
              <p>You will be redirected to the <a href="./">main documentation</a> in 5 seconds.</p>
              <p>
                <strong>Available Resources:</strong><br>
                • <a href="./">API Documentation</a><br>
                • <a href="https://github.com/starknet-io/types-js/tree/main/guides">Developer Guides</a><br>
                • <a href="https://github.com/starknet-io/types-js">GitHub Repository</a>
              </p>
            </div>
          </body>
          </html>
          EOF
          fi

      - name: 📁 Upload Documentation Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs
          name: github-pages
          retention-days: 7

  # Deploy to GitHub Pages (only on main branch)
  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    timeout-minutes: 5

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages

      - name: ✅ Deployment Success
        run: |
          echo "🎉 Documentation deployed successfully!"
          echo "📍 URL: ${{ steps.deployment.outputs.page_url }}"
          echo "🔗 Direct links:"
          echo "  • API Docs: ${{ steps.deployment.outputs.page_url }}"
          echo "  • GitHub Guides: https://github.com/starknet-io/types-js/tree/main/guides"
          echo "  • Performance Guide: https://github.com/starknet-io/types-js/blob/main/guides/PERFORMANCE_GUIDE.md"

  # Validate deployment (runs after deploy)
  validate:
    name: 🔍 Validate Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    timeout-minutes: 3

    steps:
      - name: 🏥 Health Check
        run: |
          echo "🔍 Validating deployment..."
          
          # Wait for deployment to be available
          sleep 30
          
          # Get the deployed URL
          DOCS_URL="${{ needs.deploy.outputs.page_url }}"
          
          # Health check with retries
          for i in {1..5}; do
            if curl -s -f "$DOCS_URL" > /dev/null; then
              echo "✅ Documentation is accessible at $DOCS_URL"
              
              # Check for guide links
              if curl -s "$DOCS_URL" | grep -q "Developer Guides"; then
                echo "✅ Guide links verified in deployed documentation"
              else
                echo "⚠️ Guide links not found in deployed documentation"
              fi
              
              exit 0
            else
              echo "⏳ Attempt $i: Documentation not yet available, waiting..."
              sleep 10
            fi
          done
          
          echo "❌ Documentation health check failed"
          exit 1

  # Preview deployment for PRs
  preview:
    name: 📋 PR Documentation Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    timeout-minutes: 3

    steps:
      - name: 📋 PR Comment - Documentation Preview
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('📚 Documentation Preview')
            );

            const commentBody = `## 📚 Documentation Preview

            ✅ Documentation built successfully for this PR!

            ### 📖 Changes Detected
            This PR modifies documentation-related files. The TypeDoc documentation has been regenerated and validated.

            ### 🔗 Preview Links
            Since this is a PR, the full deployment is not available. After merging to \`main\`, the documentation will be available at:
            - **Live Documentation**: https://starknet-io.github.io/types-js/
            - **Developer Guides**: https://github.com/starknet-io/types-js/tree/main/guides

            ### 📋 Validation Results
            - ✅ TypeDoc generation successful
            - ✅ HTML structure validated
            - ✅ Guide links verified
            - ✅ Assets properly included

            ### 🚀 Next Steps
            After merging this PR to \`main\`, the documentation will be automatically deployed to GitHub Pages.

            ---
            *This comment is automatically updated for each commit.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }